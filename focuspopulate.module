<?php
/**
 * @file
 * Code for the Focus Populate feature.
 */

include_once 'focuspopulate.features.inc';


/**
 * Implementation of hook_perm().
 */
function focuspopulate_perm() {
  return array('Populate Focus Database');
}

/*
 * Admin Settings form for gozulla directory
 */
// function focuspopulate() {
//   
//   $form['focuspopulate_bad_factual_ids'] = array(
//     '#type' => 'textarea',
//     '#title' => t('Bad Factual ID\'s'),
//     '#description' => t('Enter bad Factual ID\'s separated by commas. IDs listed here will be excluded in results'),
//     '#default_value' => variable_get('focuspopulate_bad_factual_ids', ''),
//     '#required' => FALSE,
//   );
// 
//   $form['focuspopulate_factual_key'] = array(
//     '#type' => 'textfield',
//     '#title' => t('Factual API key'),
//     '#default_value' => variable_get('focuspopulate_factual_key', ''),
//     '#required' => TRUE
//   );
//   
//   $form['focuspopulate_factual_secret'] = array(
//     '#type' => 'textfield',
//     '#title' => t('Factual API secret'),
//     '#default_value' => variable_get('focuspopulate_factual_secret', ''),
//     '#required' => TRUE
//   );
// 
//   return system_settings_form($form);
// }

/**
 * Implementation of hook_menu().
 */
// function focuspopulate_menu() {
//   
//   $items = array();
//     $items['admin/config/focus_directory'] = array(
//       'title' => t('Focus Directory'),
//       'description' => t('Focus Directory settings.'),
//       'page callback' => 'drupal_get_form',
//       'access callback' => TRUE,
//       'page arguments' => array('focuspopulate'),
//       'access arguments' => array('administer Focus directory settings'),
//       'type' => MENU_NORMAL_ITEM,
//     );
// 
//   return $items;
// }


//foreach ($results as $result) {
//$options[] = $result->term_data_name;
//}

//dpm($_SESSION['ip_geoloc']);

function focuspopulate_form_alter(&$form, &$form_state, $form_id) {
  
  if (isset($_SESSION['ip_geoloc']['location']['locality']) && isset($_SESSION['ip_geoloc']['location']['administrative_area_level_1'])) {
    $city_state = $_SESSION['ip_geoloc']['location']['locality'] . ', ' . $_SESSION['ip_geoloc']['location']['administrative_area_level_1'];
  }
  else {
    $city_state = t('Newport, OR');
  }


  //dpm($form);
  switch ($form_id) {
    
    case 'views_exposed_form':
      if ($form['#id'] == 'views-exposed-form-populatedatabase-populate-bike'   || 
        $form['#id'] == 'views-exposed-form-populatedatabase-populate-boat'     || 
        $form['#id'] == 'views-exposed-form-populatedatabase-populate-climb'    || 
        $form['#id'] == 'views-exposed-form-populatedatabase-populate-golf'     || 
        $form['#id'] == 'views-exposed-form-populatedatabase-populate-skate'    || 
        $form['#id'] == 'views-exposed-form-populatedatabase-populate-snow'     ||
        $form['#id'] == 'views-exposed-form-populatedatabase-populate-surf') {    


        //dpm($form);
        // Using dpm with Devel installed to give me array data on the Views form
       
        $form['submit'] = array(
          '#type' => 'image_button',
          '#src' => drupal_get_path('module', 'gozulla_directory') .'/images/go_btn.png',
        );

        $form['circle']['value']['#default_value'] = 50;
        
        $form['circle']['location']['#size'] = 14; 
        $form['circle']['location']['#default_value'] = $city_state; 
        $form['circle']['location']['#field_prefix'] = '+'; 

        $form['circle']['value']['#field_prefix'] =  t('<span id="findme"><a href="#" id="findme-link">FIND ME</a></span> or search '); 
        $form['circle']['value']['#field_suffix'] = t('mi '); 
      }
      
    break;
  }
}


/**
 * Implements hook_theme()
 */
/*function focuspopulate_theme() {
  return array(
    'focuspopulate_sport_shops' => array(
      'render element' => 'shops',
      'template'       => 'focuspopulate-sport-shops',
      'path'           => drupal_get_path('module', 'focuspopulate') . '/theme',
    ),
  );
}*/


/**
 * Constructs a sports directory page.
 */
function focuspopulate_disc() {
  return array('#markup' => '
    <ul>
      <li>
        <div id="disc-directory">' . t('disc golf directory coming soon') . '</div>
      </li>
    </ul>
    '
  );
}


/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function focuspopulate_block_info() {

  $blocks['populate_bike'] = array(
    // info: The name of the block.
    //$view = views_get_view('focuspopulate');
    //$view->set_display('bike');
    //$view->is_cacheable = FALSE;  
    //$view->execute();  
    //dpm($view->exposed_raw_input);


//     $view = views_get_view('focuspopulate')
//     ->set_display('defaults');
//     ->set_items_per_page(0);
//     ->execute();
// $results = $view->result;
//     views_get_view('');
    'info' => t('focuspopulate: bike shops (google places)'),
    'status' => TRUE,
    'region' => 'content', 
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'bike',
  );
  
  $blocks['populate_boat'] = array(
    // info: The name of the block.
    'info' => t('focuspopulate: boat shops (google places)'),
    'status' => TRUE,
    'region' => 'content', 
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'boat',
  );

  $blocks['populate_climb'] = array(
    // info: The name of the block.
    'info' => t('focuspopulate: climb shops (google places)'),
    'status' => TRUE,
    'region' => 'content', 
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'climb',
  );  
  
  $blocks['populate_golf'] = array(
    // info: The name of the block.
    'info' => t('focuspopulate: golf shops (google places)'),
    'status' => TRUE,
    'region' => 'content', 
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'golf',
  );
  
  $blocks['populate_skate'] = array(
    // info: The name of the block.
    'info' => t('focuspopulate: skate shops (google places)'),
    'status' => TRUE,
    'region' => 'content', 
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'skate',
  );
  
  $blocks['populate_snow'] = array(
    // info: The name of the block.
    'info' => t('focuspopulate: snow shops (google places)'),
    'status' => TRUE,
    'region' => 'content', 
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'snow',
  );
  
  $blocks['populate_surf'] = array(
    // info: The name of the block.
    'info' => t('focuspopulate: surf shops (google places)'),
    'status' => TRUE,
    'region' => 'content', 
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'surf',
  );

  return $blocks;

}


/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function focuspopulate_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  $block = '';
  switch ($delta) {

    case 'populate_bike':

      $block['subject'] = t('');
      $block['content'] = focuspopulate_contents($delta);
      break;
      
    case 'populate_boat':
      $block['subject'] = t('');
      $block['content'] = focuspopulate_contents($delta);
      break;  
      
    case 'populate_climb':
      $block['subject'] = t('');
      $block['content'] = focuspopulate_contents($delta);
      break;

    case 'populate_golf':
      $block['subject'] = t('');
      $block['content'] = focuspopulate_contents($delta);
      break; 

    case 'populate_skate':
      $block['subject'] = t('');
      $block['content'] = focuspopulate_contents($delta);
      break;
      
    case 'populate_snow':
      $block['subject'] = t('');
      $block['content'] = focuspopulate_contents($delta);
      break;

    case 'populate_surf':
      $block['subject'] = t('');
      $block['content'] = focuspopulate_contents($delta);
      break;

    case 'lodging':
      $block['subject'] = t('');
      $block['content'] = focuspopulate_contents($delta);
      break;  

    default:
      $block['subject'] = t('');
      $block['content'] = focuspopulate_contents($delta);
      break;
          
  }

  return $block;

}

/**
 * A module-defined block content function.
 */
function focuspopulate_contents($which_block) {
  //$shops = array();
  $sport = 'all';
  switch ($which_block) {
      
    case 'populate_bike':


      $sport = 'bike';
      include_once('focuspopulate_shops.inc'); // common include
      return array('#markup' => $shops);
      break;
        
    case 'populate_boat':
      $sport = 'boat';
      include_once('focuspopulate_shops.inc'); // common include
      return array('#markup' => $shops);
      break; 
      
    case 'populate_climb':
      $sport = 'climb';
      include_once('focuspopulate_shops.inc'); // common include
      return array('#markup' => $shops);
      break;
      
    case 'populate_golf':
      $sport = 'golf';
      include_once('focuspopulate_shops.inc'); // common include
      return array('#markup' => $shops);
      break; 

    case 'vskate':
      $sport = 'skate';
      include_once('focuspopulate_shops.inc'); // common include
      return array('#markup' => $shops);
      break;
      
    case 'populate_snow':
      $sport = 'snow';
      include_once('focuspopulate_shops.inc'); // common include
      return array('#markup' => $shops);
      break; 

    case 'populate_surf':
      $sport = 'surf';
      include_once('focuspopulate_shops.inc'); // common include
      return array('#markup' => $shops);
      break;


    // default:
    //   $sport = 'default';
    //   include_once('focuspopulate_shops.inc'); // common include
    //   return array('#markup' => $shops);
    //   break; 

  }

}